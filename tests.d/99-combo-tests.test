#!/bin/sh

max_priority () {
    echo $Exhaustive
}

create () {
    cd $1
    
    touch xattr-with-rfork
    echo "I love pancakes so much" > xattr-with-rfork/..namedfork/rsrc
    xattr-util w fairy.tale \
            "My friend Goldilocks, she does things she shouldn't do" \
            xattr-with-rfork
    
    # Nope, can't do it
    # sudo mknod device-with-acl c 3 3
    # chmod +a "www allow read" device-with-acl

    # A big fat test with lots of metadata
    echo "gotta boogie" > many-metadata
    xattr-util w big.time "so much larger than life" many-metadata
    xattr-util w big.time2 "so much larger than life" many-metadata
    xattr-util w big.time3 "so much larger than life" many-metadata
    echo "Jack-knifed Juggernaut" > many-metadata/..namedfork/rsrc
    chmod 604 many-metadata
    SetFile -a ABCDEIMNSTVZ many-metadata
    chmod +a "www allow read" many-metadata
    chmod +a "nobody allow read" many-metadata
    sudo chown www:www many-metadata
    chflags uappnd,nodump many-metadata
    # Lock the file to make sure the copier doesn't lock it too early
    sudo SetFile -a L many-metadata
    
    # I've been told that Apple's rsync once had a problem with the combination
    # of hardlinks and resource forks.  Let's try it
    # touch hl-rfork1
    # ln hl-rfork1 hl-rfork2
    # echo "Willie was a whale and he walked on the water" \
        # > hl-rfork1/..namedfork/rsrc
    # echo "and he twied to be wuff and he twied to be tough" \
        # >> hl-rfork2/..namedfork/rsrc
}

compare-xattrs () {
    test -e $1 && \
        test -e $2 && \
		# The order in which the xattrs are listed is not guaranteed to be identical
		# across filesystems, so we sort the list before comparing to avoid false negatives
        test "`xattr-util l $1 | sort`" = "`xattr-util l $2 | sort`" \
        || return 1
    for a in `xattr-util l $1`; do
        test "`xattr-util r $a $1`" = "`xattr-util r $a $2`" || return 1
    done
}

compare-rforks () {
    test -e $1 && \
        test -e $2 && \
        cmp $1/..namedfork/rsrc $2/..namedfork/rsrc
}

compare-acls () {
    test "`ls -le $1 | tail -n +2`" = "`ls -le $2 | tail -n +2`"
}

compare-stats () {
    test -e $2
    test "`stat -f '%u:%g:%p' $1`" = "`stat -f '%u:%g:%p' $2`"
}

compare-finder-flags () {
    test "`GetFileInfo -P -a $1`" = "`GetFileInfo -P -a $2`"
    test "`GetFileInfo -P -t $1`" = "`GetFileInfo -P -t $2`"
    test "`GetFileInfo -P -c $1`" = "`GetFileInfo -P -c $2`"
    test "`GetFileInfo -P -m $1`" = "`GetFileInfo -P -m $2`"
}

compare-bsd-flags () {
    test "`/bin/ls -lo $1 | awk '{print $5}'`" = \
         "`/bin/ls -lo $2 | awk '{print $5}'`"
}

compare-inodes () {
    test "`stat -f \"%i\" $1`" = "`stat -f \"%i\" $2`"
}

verify () {
    cd $1
    
    begin-subtests
    
    test -e ./xattr-with-rfork \
        && compare-xattrs ./xattr-with-rfork $2/xattr-with-rfork \
        && compare-rforks ./xattr-with-rfork $2/xattr-with-rfork
    x1=$?
    subtest "xattrs + rsrc forks" $x1
    
    # test -e ./device-with-acl \
    #     && compare-acls ./device-with-acl $2/device-with-acl
    # x2=$?
    # subtest "device w/ACL" $x2
    
    test -e ./many-metadata \
        && cmp ./many-metadata $2/many-metadata \
        && compare-xattrs ./many-metadata $2/many-metadata \
        && compare-rforks ./many-metadata $2/many-metadata \
        && compare-acls ./many-metadata $2/many-metadata \
        && compare-bsd-flags ./many-metadata $2/many-metadata \
        && compare-finder-flags ./many-metadata $2/many-metadata \
        && compare-stats ./many-metadata $2/many-metadata
    x3=$?
    subtest "lots of metadata" $x3
    
    # For now, this goes in the resource-forks test so it can be "critical"
    # test -e ./hl-rfork1 \
        # && test -e ./hl-rfork2 \
        # && compare-inodes ./hl-rfork1 ./hl-rfork2 \
        # && compare-rforks ./hl-rfork1 $2/hl-rfork1 \
        # && compare-rforks ./hl-rfork2 $2/hl-rfork2
    # x4=$?
    # subtest "hardlinks + rsrc forks" $x4
    
    alltrue $x1 $x3
}

clean () {
    sudo SetFile -a l many-metadata
}

compare () {
    true
}
