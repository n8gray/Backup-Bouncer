#!/bin/sh

max_priority () {
    echo $Important
}

create () {
    cd $1
    
    touch acl-test
    chmod +a "www allow read" acl-test
    chmod +a "www deny write" acl-test
    chmod +a "nobody allow read" acl-test
    
    touch acl-test-locked-file
    chmod +a "www allow read" acl-test-locked-file
    chmod +a "www deny write" acl-test-locked-file
    chmod +a "nobody allow read" acl-test-locked-file
    chflags uchg acl-test-locked-file
    
    mkdir acl-test-dir
    touch acl-test-dir/test_file_before_inherited_acl_applied
    chmod +a "www allow read" acl-test-dir
    chmod +a "nobody allow read" acl-test-dir
    chmod +a "nobody deny delete_child" acl-test-dir
    chmod +a "staff allow list,directory_inherit,file_inherit" acl-test-dir
    touch acl-test-dir/test_file_after_inherited_acl_applied

    
    # Want these to be different from the symlink's target so we know
    # we're getting the right thing.
    #
    # Ok, symlinks can't have acls
    # ln -s ./acl-test acl-test-symlink
    # chmod +a "nobody allow read" acl-test-symlink
    # chmod +a "sshd allow read" acl-test-symlink
}

compare () {
    test "`ls -Plde $1 | tail -n +2`" = "`ls -Plde $2 | tail -n +2`"
}


verify () {
    cd $1
    
    begin-subtests
    
    compare $2/acl-test ./acl-test
    t1=$?
    subtest "on files" $t1
    
    compare $2/acl-test-dir ./acl-test-dir
    t2=$?
    subtest "on dirs" $t2
    
    # compare $2/acl-test-symlink ./acl-test-symlink
    # t3=$?
    # subtest "on symlinks" $t3
    
    compare $2/acl-test-locked-file ./acl-test-locked-file
    t3=$?
    subtest "on locked files" $t3
    
    compare $2/acl-test-dir/test_file_before_inherited_acl_applied ./acl-test-dir/test_file_before_inherited_acl_applied
    t4=$?
    subtest "on non-inherited acls" $t4
    
    compare $2/acl-test-dir/test_file_after_inherited_acl_applied ./acl-test-dir/test_file_after_inherited_acl_applied
    t5=$?
    subtest "on inherited acls" $t5
    
    alltrue $t1 $t2 $t3 $t4 $t5
}

clean () {
    true
}
